name: Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:

permissions:
  contents: write

jobs:
  build-linux:
    name: Build for Linux
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            runner: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            runner: ubuntu-24.04-arm

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}
          cache-key: ${{ matrix.target }}

      - name: Set up mold
        uses: rui314/setup-mold@v1
        with:
          make-default: false

      - name: Build the binary
        run: cargo build --release --locked --target ${{ matrix.target }} --features cli

      - name: Upload Linux distributables
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/iso2wbfs

  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
          - target: aarch64-pc-windows-msvc

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}
          cache-key: ${{ matrix.target }}

      - name: Build the binary
        run: cargo build --release --locked --target ${{ matrix.target }} --features cli

      - name: Upload Windows distributables
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/iso2wbfs.exe

  build-macos:
    name: Build for MacOS
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: aarch64-apple-darwin
          - target: x86_64-apple-darwin

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}
          cache-key: ${{ matrix.target }}

      - name: Build the binary
        run: cargo build --release --locked --target ${{ matrix.target }} --features cli

      - name: Upload MacOS distributables
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/iso2wbfs


  release:
    name: Create GitHub Release
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [ build-linux, build-windows, build-macos ]
    steps:
      - name: Download distributables
        uses: actions/download-artifact@v4
        with:
          pattern: '*dist*'

      - name: Rename distributables
        run: |
          mkdir dist
          mv dist-x86_64-unknown-linux-gnu/iso2wbfs dist/iso2wbfs-linux-x86_64
          mv dist-aarch64-unknown-linux-gnu/iso2wbfs dist/iso2wbfs-linux-aarch64
          mv dist-x86_64-pc-windows-msvc/iso2wbfs.exe dist/iso2wbfs-windows-x86_64.exe
          mv dist-aarch64-pc-windows-msvc/iso2wbfs.exe dist/iso2wbfs-windows-aarch64.exe
          mv dist-x86_64-apple-darwin/iso2wbfs dist/iso2wbfs-macos-x86_64
          mv dist-aarch64-apple-darwin/iso2wbfs dist/iso2wbfs-macos-aarch64

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}