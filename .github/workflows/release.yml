name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-unix:
    name: Build for Linux & MacOS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build for Linux x86_64
        run: |
          docker run --rm -v ${{ github.workspace }}:/io -w /io \
            ghcr.io/rust-cross/cargo-zigbuild \
            cargo zigbuild --release --target x86_64-unknown-linux-gnu

      - name: Build for Linux aarch64
        run: |
          docker run --rm -v ${{ github.workspace }}:/io -w /io \
            ghcr.io/rust-cross/cargo-zigbuild \
            cargo zigbuild --release --target aarch64-unknown-linux-gnu

      - name: Build for macOS Universal2
        run: |
          docker run --rm -v ${{ github.workspace }}:/io -w /io \
            ghcr.io/rust-cross/cargo-zigbuild \
            cargo zigbuild --release --target universal2-apple-darwin

      - name: Prepare artifacts for upload
        run: |
          mkdir staging
          cp target/x86_64-unknown-linux-gnu/release/iso2wbfs staging/iso2wbfs-linux-x86_64
          cp target/aarch64-unknown-linux-gnu/release/iso2wbfs staging/iso2wbfs-linux-aarch64
          cp target/universal2-apple-darwin/release/iso2wbfs staging/iso2wbfs-macos-universal2

      - name: Upload Unix artifacts
        uses: actions/upload-artifact@v4
        with:
          name: unix-builds
          path: staging/*

  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install targets
        run: rustup target add x86_64-pc-windows-msvc aarch64-pc-windows-msvc

      - name: Build for Windows (x86_64 & aarch64)
        run: |
          cargo build --release --target x86_64-pc-windows-msvc
          cargo build --release --target aarch64-pc-windows-msvc

      - name: Prepare artifacts for upload
        run: |
          mkdir staging
          cp target/x86_64-pc-windows-msvc/release/iso2wbfs.exe staging/iso2wbfs-windows-x86_64.exe
          cp target/aarch64-pc-windows-msvc/release/iso2wbfs.exe staging/iso2wbfs-windows-aarch64.exe

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-builds
          path: staging/*

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-unix, build-windows]
    steps:
      - name: Download all artifacts into a single directory
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}